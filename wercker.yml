# The container definition we want to use for developing our app
box: golang:1.7
build:
  steps:
    - setup-go-workspace:
        package-dir: github.com/kubermatic/k8sniff
    - script:
        name: install go tools
        code: |
          go version
          go get
          git describe --tags |tee VERSION
          go get -u github.com/Masterminds/glide
    - script:
        name: install dependencies
        code: |
          GLIDE_HOME="$WERCKER_CACHE_DIR/glide/"
          echo "GLIDE_HOME = $GLIDE_HOME"
          mkdir -p $GLIDE_HOME
          glide --home $GLIDE_HOME install --strip-vendor
    # Statically build the project
    - script:
        name: go build
        code: CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o k8sniff .
    # Test the project
    - script:
        name: go test
        code: go test $(glide nv)
    # Copy binary to a location that gets passed along to the deploy pipeline
    - script:
        name: copy to deployment directory
        code: |
          cp -av k8sniff "$WERCKER_OUTPUT_DIR"

deploy:
  box:
    id: alpine:3.4
    cmd: /bin/sh
  docker-push:
    - internal/docker-push:
        name: push to docker hub as latest
        author: Sebastian Scheele <scheele.s@web.de>
        cmd: /pipeline/source/k8sniff
        username: $USERNAME
        password: $PASSWORD
        email: scheele.s@web.de
        tag: latest
        repository: kubermatic/k8sniff
        registry: https://registry.hub.docker.com
